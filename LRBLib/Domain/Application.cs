//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LRB.Lib.Domain
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel;
    using SimpleSecurity;
    using System.ComponentModel.DataAnnotations.Schema;

    public class ApplicationType
    {
        [ScaffoldColumn(false)]
        public int Id { get; set; }
        public string Name { get; set; }
        public string Value { get; set; }
        public virtual ICollection<Application> Applications { get; set; }
    }
    public class Requirement
    {
        public string applicationType { get; set; }
        public string landUse { get; set; }
        public int landSize { get; set; }
        public string landSizeUnit { get; set; }
    }
    public partial class Application
    {
        public Application()
        {
            var user = WebSecurity.GetCurrentUser();
            UserId = user.UserName;
            //UserId = "Skims";
            StartDate = DateTime.Now;            
            ApplicationType = "Individual";
            Status = "Incomplete";
            Parties = new List<Party>();
            Properties = new List<Property>();
            //var priprop = new Property()
            //{
            //    Development = "Undeveloped",
            //    CapacityofOwnership = "Inheritance",
            //    LandSize = 100,
            //    LandSizeUnit = "hectares",
            //    LandUse = "Residential",
            //    PeriodofPossession = "3 years"
            //};
            
            //var tparty = new Party()
            //{
            //    Surname = "Land",
            //    Firstname = "Land",
            //    Middlename = "Land",
            //    Email = "land@gmail.com",
            //    MobileNo = "land01",
            //    PartyType = "ContactPerson"
            //};
            //this.Parties.Add(tparty);
            //this.Properties.Add(priprop);
            Citizens = new List<Citizen>(){
                new Citizen(){}
            };
        }

        [ScaffoldColumn(false)]
        public int Id { get; set; }

        [ScaffoldColumn(false)]
        public string UserId { get; set; }

        [ScaffoldColumn(false)]
        [DisplayName("Submission by applicant")]
        public Nullable<bool> SubmittedbyApplicant { get; set; }

        public string OtherRelevantInfo { get; set; }

        [ScaffoldColumn(false)]
        [DisplayName("Submission date")]
        public Nullable<System.DateTime> SubmissionDate { get; set; }

        [ScaffoldColumn(false)]
        [DisplayName("Start date")]
        public System.DateTime StartDate { get; set; }

        [ScaffoldColumn(false)]
        public String Status { get; set; }

        [DisplayName("Type of Application")]
        public string ApplicationType { get; set; }

        [ScaffoldColumn(false)]
        public String SolaId { get; set; }

        public Citizen InterimApplicant
        {
            get
            {
                return this.Citizens.FirstOrDefault();
            }
        }

        [NotMapped]
        public Party ContactPerson {
            get
            {
                return this.Parties.Where(p => p.PartyType == "ContactPerson").FirstOrDefault();
            }
        }

        [NotMapped]
        public Property PrimaryProperty { get { return this.Properties.FirstOrDefault(); } }

        public Property getPrimaryProperty()
        {
            return this.Properties.FirstOrDefault();
        }


        public List<Party> Parties { get; set; }
        public List<Property> Properties { get; set; }
        public virtual List<Document> Documents { get; set; }
        public virtual List<Citizen> Citizens { get; set; }
    }
}
