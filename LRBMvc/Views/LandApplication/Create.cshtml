@model LRB.Lib.Domain.Requirement

@{
    ViewBag.Title = "Application for Certificate of Occupancy";
}

<h2>@ViewBag.Title</h2>
<div ng-app="app">
    <div ng-controller="CreateCtrl">
        @using (Html.BeginForm("Create", "LandApplication",
            new { ReturnUrl = ViewBag.ReturnUrl },
            FormMethod.Post, new { @class = "", @role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div class="form col-md-6 offset3">
                <div class="form-group">
                    <div class="radio">
                        <label>
                            @Html.RadioButtonFor(model => model.applicationType, "Individual", new { @class = "tomcat", @ng_model = "type", @ng_change = "changetype()" })
                            I am applying as an Individual
                        </label>

                    </div>
                    <div class="radio">
                        <label>
                            @Html.RadioButtonFor(model => model.applicationType, "Organization", new { @class = "tomcat", @ng_model = "type", @ng_change = "changetype()" })
                            I am applying as an organization
                        </label>

                    </div>
                </div>


                <div class="form-group">
                    <label for="inputEmail3" class="control-label">State the use of this land</label>
                    <div class="">
                        @Html.DropDownListFor(model => model.landUse,
            new SelectList(new String[] { "Residential", "Commercial", "Industrial", "Recreational", "Religious", "Educational", "Other" }),
            new { @class = "form-control", @ng_model = "landUse", })
                    </div>
                </div>
                <div class="form-group">
                    <label for="inputEmail3" class="control-label">State the Size of this Land</label>
                    <div class="">
                        @Html.TextBoxFor(model => model.landSize, new { @class = "form-control", @type = "number", @ng_model = "landSize" })

                    </div>
                </div>
                <div class="form-group">
                    <label for="inputEmail3" class="control-label">State the Unit of the Area</label>
                    <div class="input-group">
                        @Html.DropDownListFor(model => model.landSizeUnit,
            new SelectList(new String[] { "hectares", "square meters", " square feet", "acres" }), new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-5 well">
                <h4>Indicate the documents you have</h4>
                <label class="form-control" ng-repeat="doc in selection">
                    <input
                        type="checkbox"
                        name="selectedFruits[]"
                        value="{{doc.name}}"
                        ng-model="doc.selected">
                    {{doc.display}}
                </label>
                <p class="alert alert-warning">
                    You are required to have <strong>ALL THESE DOCUMENTS</strong> before starting the application process
                </p>
                <p title="{{advice}}" data-toggle="tooltip">
                    <input type="submit"  ng-disabled="disabled" class="btn btn-default btn-{{canSubmitClass}}" value="I have these requirements, Start Application" />
                </p>

            </div>
    
        }

    </div>
    @section Scripts{
        <script type="text/javascript">
            var app = angular.module("app", []);
            app.controller('CreateCtrl', ['$scope', 'filterFilter', function ObjectArrayCtrl($scope, filterFilter) {
                // fruits
                $scope.docs = [
                  { name: 'surveyplan', display: 'Original Survey Plans', selected: false, type: "general", },
                  { name: 'evidence', display: 'Evidence of Ownership', selected: false, type: "general" },
                  { name: 'passport', display: 'Passport Photograph', selected: false, type: "general" },
                  { name: 'developmentlevy', display: 'Evidence of payment of three years development levy', selected: false, type: "general" },
                  { name: 'certificate', display: 'Certificate of Incorporation', selected: false, special: 'organization' },
                  { name: 'fireservice', display: 'Fire service report', selected: false, special: 'fillingstation' },
                  { name: 'policereport', display: 'Police report', selected: false, special: 'fillingstation' },
                  { name: 'feasibilityreport', display: 'Feasibility Report', selected: false, special: 'largeland' },
                ];

                // selected fruits
                $scope.selection = [];
                $scope.canSubmit = false;
                $scope.canSubmitClass = "danger";
                $scope.advice="You cannot start this application without having the required documents"
                $scope.changetype = function () {

                    if ($scope.type == "Individual") {
                        $scope.selection = filterFilter($scope.docs, { type: "general" });
                        angular.forEach(filterFilter($scope.docs, { special: "individual" }), function (doc) {
                            $scope.selection.push(doc);
                        });
                    }
                    if ($scope.type == "Organization") {
                        $scope.selection = filterFilter($scope.docs, { type: "general" });
                        angular.forEach(filterFilter($scope.docs, { special: "organization" }), function (doc) {
                            $scope.selection.push(doc);
                        });
                    }
                    if ($scope.landSize > 5000) {
                        angular.forEach(filterFilter($scope.docs, { special: "largeland" }), function (doc) {
                            $scope.selection.push(doc);
                        });
                    }
                }

                $scope.selectedFruits = function selectedFruits() {
                    return filterFilter($scope.fruits, { selected: true });
                };
                $scope.$watch("landSize", function (newValue, oldValue) {
                    if (newValue > 5000) {
                        $scope.selection = filterFilter($scope.docs, { type: "general" });
                        if ($scope.type == "Individual") {
                            angular.forEach(filterFilter($scope.docs, { special: "individual" }), function (doc) {
                                $scope.selection.push(doc);
                            });
                        }
                        if ($scope.type == "Organization") {
                            angular.forEach(filterFilter($scope.docs, { special: "organization" }), function (doc) {
                                $scope.selection.push(doc);
                            });
                        }
                        angular.forEach(filterFilter($scope.docs, { special: "largeland" }), function (doc) {
                            $scope.selection.push(doc);
                        });
                    }
                    else {
                        $scope.selection = filterFilter($scope.docs, { type: "general" });
                        if ($scope.type == "Individual") {
                            angular.forEach(filterFilter($scope.docs, { special: "individual" }), function (doc) {
                                $scope.selection.push(doc);
                            });
                        }
                        if ($scope.type == "Organization") {
                            angular.forEach(filterFilter($scope.docs, { special: "organization" }), function (doc) {
                                $scope.selection.push(doc);
                            });
                        }
                    }
                });
                $scope.$watch('selection|filter:{selected:false}', function (nv) {
                    if (nv.length == 0) {
                        $scope.disabled = "";
                        $scope.canSubmit = true;
                        $scope.canSubmitClass = "success";
                    }
                    else {
                        $scope.disabled = "disabled";
                        $scope.canSubmitClass = "danger";
                        $scope.canSubmit = false;
                    }
                }, true);
                $scope.$watch('selection', function (nv) {
                    if ($scope.landSize == null || $scope.type == null) {
                        $scope.disabled = "disabled";
                        $scope.canSubmitClass = "danger";
                        $scope.canSubmit = false;
                    }
                }, true);
            }]);
        </script>
    }
</div>
